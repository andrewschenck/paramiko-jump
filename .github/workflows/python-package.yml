name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8.18', '3.9.0', '3.10.14', '3.11.0', '3.12.5']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint pycodestyle mypy pytest pytest-cov

      - name: Run pylint
        run: pylint paramiko_jump

      - name: Run pycodestyle
        run: pycodestyle paramiko_jump

      - name: Run mypy
        run: mypy paramiko_jump

      # - name: Run tests with pytest
      #   run: pytest --cov=paramiko_jump --cov-report=xml

  publish-testpypi:
    if: github.ref != 'refs/tags/*'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

#      - name: Publish to TestPyPI
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
#        run: twine upload --repository testpypi dist/*

  publish-pypi:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

#      - name: Publish to PyPI
#        env:
#          TWINE_USERNAME: __token__
#          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
#        run: twine upload dist/*
